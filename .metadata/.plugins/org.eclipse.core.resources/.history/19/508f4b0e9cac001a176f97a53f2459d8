package accesscontrol.service;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

import accesscontrol.models.Node;

public class AccessService {

	public void restrictPage(String userId, String page, HashMap<String, Node<String>> hashMap) {

		if (page == null || page.trim().length() == 0) {
			return;
		}

		String[] directories = page.split("/");
		List<String> dirList = Arrays.asList(directories);
		dirList.removeAll(Arrays.asList("", null));
		
		Node<String> node;

		if (page.trim().equals("/")) {
			Node<String> root = addNode(null, "/");
			hashMap.put("/", root);
		} else {
			node = hashMap.get(page);
			for (String directory : directories) {
				if (node.getChildren().containsKey(directory)) {
					node = node.getChildren().get(directory);
				} else {
					Node<String> child = addNode(node, page.substring(page.indexOf(directory) + directory.length()));
					node.getChildren().put(directory, child);
					return;
				}

			}
		}
	}

	public Node<String> addNode(Node<String> parent, String value) {
		if (value == null || value.trim().length() == 0) {
			return null;
		}

		String[] dirNames = value.split("/");

		Node<String> parentNode = parent;

		for (String dir : dirNames) {
			Node<String> node = new Node<String>(dir);
			node.setParent(parentNode);
			parentNode.getChildren().put(dir, node);
			parentNode = node;
		}

		return null;
	}

}
